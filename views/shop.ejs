<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet">
    <style>
      .wishlist-active {
        color: #ef4444;
      }
      
      .filter-active {
        background-color: #f0f7ff;
        color: #4f46e5;
        font-weight: 500;
      }
      
      @media (max-width: 768px) {
        .sidebar-container {
          max-height: 0;
          overflow: hidden;
          transition: max-height 0.3s ease-out;
        }
        
        .sidebar-open {
          max-height: 1000px;
        }
      }
    </style>
  </head>
  <body class="bg-gray-50 font-sans">
    <%- include('./partials/header') %>

    <!-- Mobile filter toggle -->
    <div class="md:hidden flex justify-between items-center px-4 py-3 bg-white shadow-sm sticky top-0 z-10">
      <h2 class="text-lg font-medium">Products</h2>
      <button id="filterToggle" class="px-3 py-1 border rounded-md flex items-center gap-2">
        <i class="ri-filter-3-line"></i> Filter
      </button>
    </div>

    <div class="w-full min-h-screen flex flex-col md:flex-row items-start px-4 md:px-8 lg:px-20 py-6 md:py-20 gap-8">
      <!-- Sidebar -->
      <div class="sidebar-container w-full md:max-h-none md:w-[25%] md:sticky md:top-20">
        <div class="bg-white rounded-lg shadow-sm p-6 w-full">
          <div class="flex items-center gap-3 border-b pb-4">
            <h3 class="font-medium text-gray-700">Sort By</h3>
            <form action="/shop" class="w-full">
              <select id="sortSelect" class="border border-gray-200 rounded-md px-3 py-2 bg-white text-sm w-full focus:outline-none focus:ring-2 focus:ring-indigo-200 transition" name="sortby">
                <option value="popular">Popular</option>
                <option value="newest">Newest</option>
                <option value="price-low">Price: Low to High</option>
                <option value="price-high">Price: High to Low</option>
              </select>
            </form>
          </div>
          
          <div class="flex flex-col mt-6">
            <h3 class="font-medium text-gray-700 mb-3">Collections</h3>
            <a class="collection-link block w-full py-2 px-3 rounded-md mb-1 text-gray-600 hover:bg-indigo-50 hover:text-indigo-600 transition-colors duration-200 flex items-center gap-2" href="#" data-collection="new">
              <span class="w-1 h-1 bg-indigo-500 rounded-full"></span>
              New Collection
            </a>
            <a class="collection-link block w-full py-2 px-3 rounded-md mb-1 text-gray-600 hover:bg-indigo-50 hover:text-indigo-600 transition-colors duration-200 flex items-center gap-2 filter-active" href="#" data-collection="all">
              <span class="w-1 h-1 bg-indigo-500 rounded-full"></span>
              All Products
            </a>
            <a class="collection-link block w-full py-2 px-3 rounded-md mb-1 text-gray-600 hover:bg-indigo-50 hover:text-indigo-600 transition-colors duration-200 flex items-center gap-2" href="#" data-collection="discount">
              <span class="w-1 h-1 bg-indigo-500 rounded-full"></span>
              Discounted Products
            </a>
          </div>
          
          <div class="mt-6 pt-6 border-t">
            <h3 class="font-medium text-gray-700 mb-3">Filters</h3>
            <label class="flex items-center gap-2 py-2 px-3 cursor-pointer hover:bg-gray-50 rounded-md mb-1">
              <input type="checkbox" class="w-4 h-4 accent-indigo-600">
              <span class="text-gray-600">In Stock Only</span>
            </label>
            <label class="flex items-center gap-2 py-2 px-3 cursor-pointer hover:bg-gray-50 rounded-md mb-1">
              <input type="checkbox" class="w-4 h-4 accent-indigo-600">
              <span class="text-gray-600">Free Shipping</span>
            </label>
            <div class="mt-4">
              <h4 class="text-gray-600 mb-2">Price Range</h4>
              <div class="flex gap-2">
                <input type="range" class="w-full accent-indigo-600" min="0" max="5000" value="2500">
              </div>
              <div class="flex justify-between mt-2">
                <span class="text-xs text-gray-500">₹0</span>
                <span class="text-xs text-gray-500">₹5000</span>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Products Grid -->
      <div class="w-full md:w-[75%] flex flex-col gap-5">
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          <% products.forEach(function(product){ %>
          <div class="group transition-all duration-300 hover:-translate-y-1 hover:shadow-lg">
            <div class="w-full aspect-square flex items-center justify-center bg-[<%= product.bgcolor %>] rounded-t-lg overflow-hidden relative">
              <img
                class="h-[12rem] object-contain transition-transform duration-500 group-hover:scale-110"
                src="data:image/jpeg;base64,<%= product.image.toString('base64') %>"
                alt="<%= product.name %>"
              />
              <div class="absolute top-3 right-3 opacity-0 group-hover:opacity-100 transition-opacity">
                <button class="wishlist-btn w-8 h-8 bg-white rounded-full flex items-center justify-center shadow-md hover:bg-gray-100">
                  <i class="ri-heart-line wishlist-icon"></i>
                </button>
              </div>
              <% if (product.discount) { %>
              <div class="absolute top-3 left-3 bg-red-500 text-white text-xs px-2 py-1 rounded-md">
                <%= product.discount %>% OFF
              </div>
              <% } %>
            </div>
            <div
              class="flex justify-between bg-[<%= product.panelcolor %>] items-center px-5 py-4 text-[<%= product.textcolor %>] rounded-b-lg"
            >
              <div>
                <h3 class="font-medium"><%= product.name %></h3>
                <div class="flex items-center gap-2 mt-1">
                  <h4 class="font-bold">₹ <%= product.price %></h4>
                  <% if (product.oldPrice) { %>
                  <span class="text-gray-400 text-sm line-through">₹ <%= product.oldPrice %></span>
                  <% } %>
                </div>
              </div>
              <button
                class="add-to-cart w-9 h-9 flex items-center justify-center rounded-full bg-white shadow-sm hover:bg-gray-50 transition-colors"
              >
                <i class="ri-add-line"></i>
              </button>
            </div>
          </div>
          <% }) %>
        </div>
        
        <!-- Empty State (will be shown if products array is empty) -->
        <div class="hidden text-center py-16 px-4">
          <div class="inline-flex items-center justify-center w-16 h-16 bg-gray-100 rounded-full mb-4">
            <i class="ri-inbox-line text-gray-400 text-2xl"></i>
          </div>
          <h3 class="text-lg font-medium text-gray-700">No products found</h3>
          <p class="text-gray-500 mt-2">Try changing your filter settings or search term.</p>
        </div>
        
        <!-- Pagination -->
        <div class="mt-12 flex justify-center">
          <div class="flex items-center gap-2">
            <a href="#" class="w-10 h-10 flex items-center justify-center rounded-md border hover:bg-gray-50">
              <i class="ri-arrow-left-s-line"></i>
            </a>
            <a href="#" class="pagination-item w-10 h-10 flex items-center justify-center rounded-md border bg-indigo-600 text-white">1</a>
            <a href="#" class="pagination-item w-10 h-10 flex items-center justify-center rounded-md border hover:bg-gray-50">2</a>
            <a href="#" class="pagination-item w-10 h-10 flex items-center justify-center rounded-md border hover:bg-gray-50">3</a>
            <a href="#" class="w-10 h-10 flex items-center justify-center rounded-md border hover:bg-gray-50">
              <i class="ri-arrow-right-s-line"></i>
            </a>
          </div>
        </div>
      </div>
    </div>
    
    <%- include('./partials/footer') %>
    
    <script>
      // Wishlist button functionality
      document.querySelectorAll('.wishlist-btn').forEach(btn => {
        btn.addEventListener('click', function(e) {
          e.preventDefault();
          const icon = this.querySelector('.wishlist-icon');
          
          if (icon.classList.contains('ri-heart-line')) {
            icon.classList.remove('ri-heart-line');
            icon.classList.add('ri-heart-fill', 'wishlist-active');
          } else {
            icon.classList.add('ri-heart-line');
            icon.classList.remove('ri-heart-fill', 'wishlist-active');
          }
        });
      });
      
      // Add to cart button functionality
      document.querySelectorAll('.add-to-cart').forEach(btn => {
        btn.addEventListener('click', function(e) {
          e.preventDefault();
          const icon = this.querySelector('i');
          
          // Show added animation
          icon.classList.remove('ri-add-line');
          icon.classList.add('ri-check-line');
          this.classList.add('bg-green-100');
          
          // Reset after 1 second
          setTimeout(() => {
            icon.classList.add('ri-add-line');
            icon.classList.remove('ri-check-line');
            this.classList.remove('bg-green-100');
          }, 1000);
        });
      });
      
      // Collection filter functionality
      document.querySelectorAll('.collection-link').forEach(link => {
        link.addEventListener('click', function(e) {
          e.preventDefault();
          
          // Remove active class from all collection links
          document.querySelectorAll('.collection-link').forEach(el => {
            el.classList.remove('filter-active');
          });
          
          // Add active class to the clicked link
          this.classList.add('filter-active');
          
          // Here you would typically update the products based on the collection
          // For demonstration, we'll just log the collection
          console.log(`Filtering by collection: ${this.dataset.collection}`);
        });
      });
      
      // Pagination functionality
      document.querySelectorAll('.pagination-item').forEach(item => {
        item.addEventListener('click', function(e) {
          e.preventDefault();
          
          // Remove active class from all pagination items
          document.querySelectorAll('.pagination-item').forEach(el => {
            el.classList.remove('bg-indigo-600', 'text-white');
            el.classList.add('hover:bg-gray-50');
          });
          
          // Add active class to the clicked item
          this.classList.add('bg-indigo-600', 'text-white');
          this.classList.remove('hover:bg-gray-50');
          
          // Here you would typically load the next page of products
          console.log(`Loading page: ${this.textContent}`);
        });
      });
      
      // Mobile filter toggle
      const filterToggle = document.getElementById('filterToggle');
      const sidebarContainer = document.querySelector('.sidebar-container');
      
      filterToggle.addEventListener('click', function() {
        sidebarContainer.classList.toggle('sidebar-open');
      });
      
      // Sort select change event
      document.getElementById('sortSelect').addEventListener('change', function() {
        console.log(`Sorting by: ${this.value}`);
        // Here you would typically update the products based on the sort selection
      });
    </script>
  </body>
</html>